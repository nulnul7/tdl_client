{"ast":null,"code":"var _jsxFileName = \"/Users/erteka/Desktop/react/todolists/client/src/features/Content.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ListCard from './ListCard';\nimport './content.css';\nimport { DBdummy } from '../Dummy';\nimport CloseBtn from '../assets/delete_icon.svg';\nimport FormEdit from './FormEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = () => {\n  _s();\n  const [dbCopy, setDbCopy] = useState([]);\n  const [editDB, setEditDB] = useState([{\n    editDate: '',\n    ediTodo: '',\n    editPriority: true\n  }]);\n  const [editStatus, setEditStatus] = useState(false);\n  useEffect(() => {\n    setDbCopy(DBdummy);\n  }, []);\n  const delHandle = id => {\n    const delDB = dbCopy.filter(item => item._id !== id);\n    setDbCopy(delDB);\n  };\n  const editHandle = id => {\n    setEditStatus(true);\n    const getDB = dbCopy.find(item => item._id === id);\n    setEditDB(getDB);\n    // getDB => edit form => onChange to editDB => onSubmit setEditDB._id === editDB\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contentWrapper\",\n    children: [dbCopy.map(item => {\n      return /*#__PURE__*/_jsxDEV(ListCard, {\n        date: item.date,\n        todo: item.todo,\n        priority: item.priority,\n        delHandle: () => delHandle(item._id),\n        editHandle: () => editHandle(item._id)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this);\n    }), editStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editModal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closeBtn\",\n          onClick: () => setEditStatus(false),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: CloseBtn,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormEdit, {\n            editDate: editDB.date,\n            editTodo: editDB.todo,\n            checked: editDB.priority,\n            setEditTodo: () => setEditDB.editTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n_s(Content, \"QV6eRGtQp6IX4acEFIScxDCnPF0=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useEffect","useState","ListCard","DBdummy","CloseBtn","FormEdit","Content","dbCopy","setDbCopy","editDB","setEditDB","editDate","ediTodo","editPriority","editStatus","setEditStatus","delHandle","id","delDB","filter","item","_id","editHandle","getDB","find","map","date","todo","priority","editTodo"],"sources":["/Users/erteka/Desktop/react/todolists/client/src/features/Content.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ListCard from './ListCard'\nimport './content.css'\nimport {DBdummy} from '../Dummy'\nimport CloseBtn from '../assets/delete_icon.svg'\nimport FormEdit from './FormEdit'\n\nconst Content = () => {\n\n  const [dbCopy, setDbCopy] = useState([]);\n  const [editDB, setEditDB] = useState([\n      {\n        editDate:'',\n        ediTodo: '',\n        editPriority: true \n      }\n  ]);\n  const [editStatus, setEditStatus] = useState(false)\n\n  useEffect (()=> {\n    setDbCopy(DBdummy)\n  }, [])\n\n  const delHandle = (id)=> {\n    const delDB = dbCopy.filter(item => item._id !== id)\n    setDbCopy(delDB)\n  }\n\n  const editHandle = (id) => {\n    setEditStatus(true)\n    const getDB = dbCopy.find(item => item._id === id);\n    setEditDB(getDB)\n    // getDB => edit form => onChange to editDB => onSubmit setEditDB._id === editDB\n\n  }\n\n  return (\n\n      <div className=\"contentWrapper\">\n        { \n          dbCopy.map((item) => {\n          return (\n              <ListCard \n                key={item._id}\n                date={item.date} \n                todo={item.todo}\n                priority={item.priority} \n                delHandle={()=> delHandle(item._id)}\n                editHandle={()=> editHandle(item._id)} \n              />\n            )\n          })\n        }\n        {\n          editStatus ? \n          <div className=\"editContainer\">\n            <div className='editModal'>\n              <div className='closeBtn' onClick={()=>setEditStatus(false)}>\n                <img src={CloseBtn} alt=\"\" />\n              </div>\n                <div>\n                  <FormEdit \n                    editDate={editDB.date}\n                    editTodo={editDB.todo}\n                    checked={editDB.priority}\n                    setEditTodo={()=>setEditDB.editTodo}\n                  />\n                </div>\n            </div>\n          </div>\n             : null\n        }\n\n      </div>\n\n  )\n}\n\nexport default Content"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,eAAe;AACtB,SAAQC,OAAO,QAAO,UAAU;AAChC,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAEjC,MAAMC,OAAO,GAAG,MAAM;EAAA;EAEpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CACjC;IACEU,QAAQ,EAAC,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAChB,CAAC,CACJ,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAE,MAAK;IACdQ,SAAS,CAACL,OAAO,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,SAAS,GAAIC,EAAE,IAAI;IACvB,MAAMC,KAAK,GAAGX,MAAM,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,EAAE,CAAC;IACpDT,SAAS,CAACU,KAAK,CAAC;EAClB,CAAC;EAED,MAAMI,UAAU,GAAIL,EAAE,IAAK;IACzBF,aAAa,CAAC,IAAI,CAAC;IACnB,MAAMQ,KAAK,GAAGhB,MAAM,CAACiB,IAAI,CAACJ,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,EAAE,CAAC;IAClDP,SAAS,CAACa,KAAK,CAAC;IAChB;EAEF,CAAC;;EAED,oBAEI;IAAK,SAAS,EAAC,gBAAgB;IAAA,WAE3BhB,MAAM,CAACkB,GAAG,CAAEL,IAAI,IAAK;MACrB,oBACI,QAAC,QAAQ;QAEP,IAAI,EAAEA,IAAI,CAACM,IAAK;QAChB,IAAI,EAAEN,IAAI,CAACO,IAAK;QAChB,QAAQ,EAAEP,IAAI,CAACQ,QAAS;QACxB,SAAS,EAAE,MAAKZ,SAAS,CAACI,IAAI,CAACC,GAAG,CAAE;QACpC,UAAU,EAAE,MAAKC,UAAU,CAACF,IAAI,CAACC,GAAG;MAAE,GALjCD,IAAI,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAMb;IAEN,CAAC,CAAC,EAGFP,UAAU,gBACV;MAAK,SAAS,EAAC,eAAe;MAAA,uBAC5B;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAK,SAAS,EAAC,UAAU;UAAC,OAAO,EAAE,MAAIC,aAAa,CAAC,KAAK,CAAE;UAAA,uBAC1D;YAAK,GAAG,EAAEX,QAAS;YAAC,GAAG,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACzB,eACJ;UAAA,uBACE,QAAC,QAAQ;YACP,QAAQ,EAAEK,MAAM,CAACiB,IAAK;YACtB,QAAQ,EAAEjB,MAAM,CAACkB,IAAK;YACtB,OAAO,EAAElB,MAAM,CAACmB,QAAS;YACzB,WAAW,EAAE,MAAIlB,SAAS,CAACmB;UAAS;YAAA;YAAA;YAAA;UAAA;QACpC;UAAA;UAAA;UAAA;QAAA,QACE;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACF,GACD,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAGP;AAGZ,CAAC;AAAA,GArEKvB,OAAO;AAAA,KAAPA,OAAO;AAuEb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}